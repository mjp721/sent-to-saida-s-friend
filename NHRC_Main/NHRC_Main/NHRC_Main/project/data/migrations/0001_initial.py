# Generated by Django 5.0 on 2024-04-10 05:34

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='BlockProfileModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profileImage', models.ImageField(upload_to='BlockProfileImages/')),
                ('fullName', models.CharField(max_length=55)),
                ('aadharCardNumber', models.CharField(max_length=55)),
                ('panNumber', models.CharField(max_length=55)),
                ('uniNumber', models.IntegerField()),
                ('date', models.DateTimeField(blank=True, null=True)),
                ('remarks', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='contactModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('firstName', models.CharField(max_length=255)),
                ('lastName', models.CharField(max_length=255)),
                ('mobileNumber', models.CharField(max_length=10)),
                ('emailId', models.EmailField(max_length=55)),
                ('content', models.TextField(max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='HRModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fullName', models.CharField(max_length=55)),
                ('gender', models.CharField(max_length=55)),
                ('dateOfBirth', models.DateField(max_length=55)),
                ('state', models.CharField(max_length=55)),
                ('district', models.CharField(max_length=55)),
                ('pincode', models.IntegerField()),
                ('profilePic', models.ImageField(upload_to='profilePic/')),
                ('email', models.EmailField(max_length=55, unique=True)),
                ('mobileNumber', models.CharField(max_length=10)),
                ('oraganizationName', models.CharField(max_length=255)),
                ('industry', models.CharField(max_length=55)),
                ('department', models.CharField(max_length=55)),
                ('designation', models.CharField(max_length=55)),
                ('companyUrl', models.URLField(max_length=55)),
                ('workingLocation', models.CharField(max_length=255)),
                ('companyStrength', models.CharField(max_length=255)),
                ('employeeId', models.IntegerField()),
                ('experience', models.IntegerField()),
                ('officialEmail', models.EmailField(max_length=255, unique=True)),
                ('username', models.CharField(max_length=255, unique=True)),
                ('password', models.CharField(max_length=255)),
                ('is_verified', models.BooleanField(default=False)),
                ('verification_token', models.CharField(blank=True, max_length=255, null=True)),
                ('token_expires_at', models.DateTimeField(blank=True, null=True)),
                ('access_token', models.CharField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='KeyMomentsModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keyMomentImage', models.ImageField(upload_to='KeyMomentimages/')),
            ],
        ),
        migrations.CreateModel(
            name='PodcastModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='images/')),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='StudentModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fullName', models.CharField(max_length=55)),
                ('dateOfBirth', models.DateField(max_length=55)),
                ('gender', models.CharField(max_length=55)),
                ('profilePic', models.ImageField(upload_to='profilePic/')),
                ('state', models.CharField(max_length=55)),
                ('district', models.CharField(max_length=55)),
                ('pincode', models.IntegerField()),
                ('personalMail', models.EmailField(max_length=55, unique=True)),
                ('mobileNumber', models.CharField(max_length=10)),
                ('universityName', models.CharField(max_length=255)),
                ('collegeName', models.CharField(max_length=55)),
                ('qualification', models.CharField(max_length=55)),
                ('department', models.CharField(max_length=55)),
                ('passOut', models.IntegerField()),
                ('location', models.CharField(max_length=255)),
                ('studentIdProof', models.ImageField(upload_to='StudentIdProof/')),
                ('username', models.CharField(max_length=255, unique=True)),
                ('password', models.CharField(max_length=255)),
                ('is_verified', models.BooleanField(default=False)),
                ('verification_token', models.CharField(blank=True, max_length=255, null=True)),
                ('token_expires_at', models.DateTimeField(blank=True, null=True)),
                ('access_token', models.CharField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='TPOModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('firstName', models.CharField(max_length=55)),
                ('lastName', models.CharField(max_length=55)),
                ('mobile', models.CharField(max_length=10)),
                ('gender', models.CharField(max_length=55)),
                ('age', models.IntegerField()),
                ('profilePic', models.ImageField(upload_to='tpoimages/')),
                ('birth', models.DateField(max_length=55)),
                ('state', models.CharField(max_length=55)),
                ('district', models.CharField(max_length=55)),
                ('pincode', models.IntegerField()),
                ('collegeName', models.CharField(max_length=255)),
                ('university', models.CharField(max_length=55)),
                ('eamcetRank', models.IntegerField()),
                ('branch', models.CharField(max_length=55)),
                ('location', models.CharField(max_length=255)),
                ('experience', models.IntegerField()),
                ('idProof', models.ImageField(upload_to='idProof/')),
                ('email', models.EmailField(max_length=255, unique=True)),
                ('officialMailId', models.EmailField(max_length=255, unique=True)),
                ('username', models.CharField(max_length=255, unique=True)),
                ('password', models.CharField(max_length=255)),
                ('is_verified', models.BooleanField(default=False)),
                ('verification_token', models.CharField(blank=True, max_length=255, null=True)),
                ('token_expires_at', models.DateTimeField(blank=True, null=True)),
                ('access_token', models.CharField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='HrPasswordResetModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.CharField(max_length=255, unique=True)),
                ('expires_at', models.DateTimeField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='data.hrmodel')),
            ],
        ),
        migrations.CreateModel(
            name='JobPosting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('jobTitle', models.TextField()),
                ('jobDescription', models.TextField()),
                ('department', models.CharField(max_length=55)),
                ('state', models.CharField(max_length=55)),
                ('district', models.CharField(max_length=55)),
                ('address', models.CharField(max_length=255)),
                ('employmentType', models.CharField(max_length=255)),
                ('shiftType', models.CharField(max_length=55)),
                ('salaryFrom', models.CharField(max_length=55)),
                ('salaryEnd', models.CharField(max_length=55)),
                ('experienceLevel', models.CharField(max_length=55)),
                ('educationLevel', models.CharField(max_length=55)),
                ('qualifications', models.CharField(max_length=55)),
                ('contactPerson', models.CharField(max_length=255)),
                ('contactEmail', models.EmailField(max_length=55)),
                ('contactPhone', models.CharField(max_length=10)),
                ('applicationDeadline', models.DateField()),
                ('jobResponsibilities', models.TextField()),
                ('skillsRequired', models.TextField()),
                ('companyName', models.CharField(max_length=55)),
                ('companyLevel', models.CharField(max_length=55)),
                ('foundedIn', models.IntegerField()),
                ('companylogo', models.ImageField(upload_to='companylogo/')),
                ('companyDescription', models.TextField()),
                ('howtoApply', models.TextField()),
                ('websiteUrl', models.CharField(max_length=255)),
                ('approved', models.BooleanField(default=False)),
                ('approved_date', models.DateTimeField(blank=True, null=True)),
                ('hr', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='data.hrmodel')),
            ],
        ),
        migrations.CreateModel(
            name='JobApplication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('student_name', models.CharField(max_length=255)),
                ('resume', models.FileField(upload_to='resumes/')),
                ('cover_letter', models.TextField()),
                ('application_date', models.DateTimeField(auto_now_add=True)),
                ('job_posting', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='data.jobposting')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='data.studentmodel')),
            ],
        ),
        migrations.CreateModel(
            name='StudentPasswordResetModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.CharField(max_length=255, unique=True)),
                ('expires_at', models.DateTimeField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='data.studentmodel')),
            ],
        ),
        migrations.CreateModel(
            name='TPOCampusDrive',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('collegeName', models.CharField(max_length=255)),
                ('collegeAddress', models.TextField()),
                ('qualification', models.CharField(max_length=255)),
                ('branch', models.CharField(max_length=255)),
                ('noOfStudent', models.IntegerField()),
                ('jobType', models.CharField(max_length=255)),
                ('tpo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='data.tpomodel')),
            ],
        ),
        migrations.CreateModel(
            name='TPOPasswordResetModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.CharField(max_length=255, unique=True)),
                ('expires_at', models.DateTimeField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='data.tpomodel')),
            ],
        ),
    ]
